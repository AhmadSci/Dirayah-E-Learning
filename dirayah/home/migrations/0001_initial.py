# Generated by Django 4.1.3 on 2022-11-13 17:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer', models.CharField(max_length=500)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment', models.CharField(max_length=500)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='home.comment')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('difficulty', models.IntegerField()),
                ('category', models.CharField(max_length=50)),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='official_answer', to='home.answer')),
                ('answers', models.ManyToManyField(blank=True, related_name='answers', to='home.answer')),
                ('comments', models.ManyToManyField(blank=True, related_name='comments', to='home.comment')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymethod', models.CharField(max_length=50)),
                ('answers', models.ManyToManyField(blank=True, related_name='users_answered_questions', to='home.answer')),
                ('problems_solved', models.ManyToManyField(blank=True, related_name='users_solved_problems', to='home.problem')),
                ('recommendations', models.ManyToManyField(blank=True, related_name='users_recommended_problems', to='home.problem')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', models.ManyToManyField(blank=True, related_name='official_answers', to='home.answer')),
                ('problems', models.ManyToManyField(blank=True, related_name='problems', to='home.problem')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='teacher',
            field=models.ManyToManyField(blank=True, related_name='teacher', to='home.teacher'),
        ),
        migrations.AddField(
            model_name='comment',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_problem', to='home.problem'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenter', to='home.userprofile'),
        ),
        migrations.AddField(
            model_name='answer',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem', to='home.problem'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answerer', to='home.userprofile'),
        ),
    ]
